// RUN: %target-sil-opt -module-name Swift -irgen-prepare %s -enable-sil-verify-all | %FileCheck %s

sil_stage raw

import Builtin

struct MyInt {
  var value: Builtin.Int32
}

// CHECK-LABEL: sil [canonical] @isConcrete_true : $@convention(thin) (@thin MyInt.Type) -> Builtin.Int1 {
// CHECK: bb0(
// CHECK-NEXT: [[RESULT:%.*]] = integer_literal $Builtin.Int1, -1
// CHECK-NEXT: return [[RESULT]]
// CHECK-NEXT: } // end sil function 'isConcrete_true'
sil [canonical] @isConcrete_true : $@convention(thin) (@thin MyInt.Type) -> Builtin.Int1 {
bb0(%0 : $@thin MyInt.Type):
  %1 = builtin "isConcrete"(%0 : $@thin MyInt.Type) : $Builtin.Int1
  return %1 : $Builtin.Int1
}

// CHECK-LABEL: sil [canonical] @isConcrete_false : $@convention(thin) <T> (@thin T.Type) -> Builtin.Int1 {
// CHECK: bb0(
// CHECK-NEXT: [[RESULT:%.*]] = integer_literal $Builtin.Int1, 0
// CHECK-NEXT: return [[RESULT]]
// CHECK-NEXT: } // end sil function 'isConcrete_false'
sil [canonical] @isConcrete_false : $@convention(thin) <T> (@thin T.Type) -> Builtin.Int1 {
bb0(%0 : $@thin T.Type):
  %1 = builtin "isConcrete"(%0 : $@thin T.Type) : $Builtin.Int1
  return %1 : $Builtin.Int1
}
